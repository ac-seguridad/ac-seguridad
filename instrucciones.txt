Link de la pw: https://ac-seguridad-fernandobperezm.c9users.io/area-empresas/pago-estacionamiento/


Prender servidor

* Hacer cd hasta proyecto `cd project`
* Iniciar el servicio de postgres: `sudo service postgresql start`
* Iniciar el entorno virtual de Python: `source activate acseguridad`
* Iniciar el servidor: `python manage.py runserver 0.0.0.0:8080`

cd project; sudo service postgresql start; source activate acseguridad; python manage.py runserver 0.0.0.0:8080

Hacer migraciones cada vez que se actualice los modelos

*ir a la carpeta:  cd project
* Iniciar el entorno virtual de Python: `source activate acseguridad`
* Iniciar el servicio de postgres: `sudo service postgresql start`
*Decir a quien queremos migrar: python manage.py makemigrations ac_seguridad
* el muestra todas las migraciones las veo y le doy 'python manage.py migrate

***************para ver las tablas

activisar postsql:  sudo service postgresql start
entrar en la BD: psql -h localhost -U fernandobperezm -d ac_seguridad
23
select * from ac_seguridad_estacionamiento;
**************** Para borrar todo el contenido de una tabla o varias
activisar postsql:  sudo service postgresql start
entrar en la BD: psql -h localhost -U fernandobperezm -d ac_seguridad
23
truncate name1,name2;



***************Actualizar en GIT

ANTES DE HACER CUALQUIER CAMBIO VERIFICAR QUE SE ESTÁ EN LA RAMA DEVELOPMENT
O DETECTOR
git branch

PARA CAMBIAR A OTRAS RAMAS (no pueden haber cambios en la rama actual)
git checkout <nombre_otra_rama>

git status
git add nombre_de_archivo
git commit -m "Que anadiste"
git push

***************Anadir info de la base de datos a la PW

*views.py
*url
*form

**************shell
Iniciar el entorno virtual de Python: `source activate acseguridad`
en cd project

python manage.py


*************para correr el servidor.
cd project/manejador
* Iniciar el servicio de postgres: `sudo service postgresql start`
* Iniciar el entorno virtual de Python: `source activate acseguridad`
*python serv.py forks


y el cliente es
python cliente.py

************para hacer debug
al principio del código: import pdb


una linea antes de que pare: pdb.set_trace()

en el terminal,
n para ejecutar la linea actual
c para continuar la ejecución
salir ctrl d
s para meterme en la función
p expresion




VALIDAR EL PAGO DEL TICKET, 2 VECES
AÑADIR AL CONTADOR LOS NO REGISTRADOS
QUE HACER SI SE VA ELSERVIDOR. INTERNET



*******************************Para correr en la UCAB

Anadir la ip de la computadora actual en el archivo del servidor.
1. cd /var/www/ac-seguridad/project/
2. sudo nano project/settings.py
3. sudo apache2ctl restart

Para anadir la ip en el rasp
1. ssh pi@IP
2. yes
3.clave vas20Tpp
4.cd ~/Desktop/detector/source
5. python3 trainin.py 0 0 1



1. abrir 2 terminales. (servidor django, servidor manejo rasp)
2. en cada terminarl  cd ~/ac-seguridad/
3. en cada terminal source env_acseguridad/bin/activate





*****************************************borrar tablas
psql -h localhost -U acseguridad -d ac_seguridad
v





**************************************************DESACTUALIZADO








Terminal DJANGO
cd project
python manage.py runserver  'ip esta pc':"puerto a escoger"
python


TERMINAL servidor
cd project/manejador
python serv.py forks


Simulación del cliente

cd project/manejador
python cliente.py

TERMINAL DJANGO
cd ~/ac-seguridad/; source env_acseguridad/bin/activate; cd project; python manage.py runserver



TERMINAL cliente
cd ~/ac-seguridad/; source env_acseguridad/bin/activate; cd project/manejador; python cliente_entrada.py
cd ~/ac-seguridad/; source env_acseguridad/bin/activate; cd project/manejador; python cliente_salida.py




#Para correr la pagina web django

python manage.py runserver 0.0.0.0:8000

/home/ac-seguridad/project/project/settings

servodores
/home/ac-seguridad/project/manejador/


Activar entorno
/home/ferandoperez/ac-seguridad
source env_acseguridad/bin/activate
